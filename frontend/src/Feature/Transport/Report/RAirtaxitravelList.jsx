import React, { useState, useEffect } from "react";
import axios from "axios";
import { jsPDF } from "jspdf";
import "jspdf-autotable";
import logo from "../../../assets/logo.png"; 

const RAirtaxitravelList = ({ filters }) => {
  const [travels, setTravels] = useState([]);

  useEffect(() => {
    const fetchTravels = async () => {
      try {
        const response = await axios.get("http://localhost:5000/api/airSeats");
        setTravels(response.data);
      } catch (error) {
        console.error("Error fetching travel details:", error);
      }
    };
    fetchTravels();
  }, []);

  // Filter travels based on user selection
  const filteredTravels = travels.filter((travel) => {
    return (
      (!filters.departure || travel.departure === filters.departure) &&
      (!filters.destination || travel.destination === filters.destination) &&
      (!filters.date || travel.departure_datetime.startsWith(filters.date))
    );
  });

  // Generate PDF 
  const generatePDF = async () => {
    console.log(jsPDF);
    const doc = new jsPDF();

    doc.setFont("helvetica", "bold");

    // logo 
    doc.addImage(logo, "PNG", 10, 10, 20, 20); 

    // Title
    doc.setFontSize(20);
    const title = "Air Taxi Travels List".toUpperCase();  // Convert text to uppercase
    doc.text(title, 105, 20, null, null, "center");

    // table headers
    const tableColumn = [
      "Air Taxi Name", 
      "Departure", 
      "Departure Date & Time", 
      "Destination", 
      "Destination Date & Time", 
      "Ticket Fee (LKR)"
    ];

    const tableRows = filteredTravels.map((travel) => [
      travel.airtaxiName,
      travel.departure,
      new Date(travel.departure_datetime).toLocaleString(),
      travel.destination,
      new Date(travel.destination_datetime).toLocaleString(),
      travel.ticket_price + " LKR"
    ]);

    // Generate table
    if (doc.autoTable) {
      doc.autoTable({
        head: [tableColumn],
        body: tableRows,
        startY: 50, 
        headStyles: {
          fillColor: [82, 2, 153], 
          textColor: [255, 255, 255], 
          fontStyle: 'bold', 
        },
        bodyStyles: {
          fillColor: [245, 245, 245], 
          textColor: [0, 0, 0], 
        },
        margin: { top: 30, bottom: 30 },
      });

      // generated date and time
      const generatedDate = new Date().toLocaleString();
      doc.setFontSize(10);
      doc.text(`Generated on: ${generatedDate}`, 105, doc.lastAutoTable.finalY + 30, null, null, "center");

      
      doc.text("Generated By: Transport Manager - Thivyan", 105, doc.lastAutoTable.finalY + 40, null, null, "center");

      // Save PDF
      doc.save("travel_details.pdf");
    } else {
      console.error("autoTable is not available.");
    }
  };

  return (
    <div className="flex flex-wrap justify-center gap-6 mt-10">
     
      <button
        onClick={generatePDF}
        className="bg-purple-900 text-white py-2 px-6 rounded mt-5"
      >
        Download as PDF
      </button>

      {/* Display filtered travels in a table */}
      <div className="mt-10 w-full overflow-x-auto">
        <table className="min-w-full table-auto">
          <thead>
            <tr className="bg-gray-100">
              <th className="py-2 px-4 text-left">Air Taxi Name</th>
              <th className="py-2 px-4 text-left">Departure</th>
              <th className="py-2 px-4 text-left">Departure Date & Time</th>
              <th className="py-2 px-4 text-left">Destination</th>
              <th className="py-2 px-4 text-left">Destination Date & Time</th>
              <th className="py-2 px-4 text-left">Ticket Fee (LKR)</th>
            </tr>
          </thead>
          <tbody>
            {filteredTravels.map((travel) => (
              <tr key={travel._id}>
                <td className="py-2 px-4">{travel.airtaxiName}</td>
                <td className="py-2 px-4">{travel.departure}</td>
                <td className="py-2 px-4">
                  {new Date(travel.departure_datetime).toLocaleString()}
                </td>
                <td className="py-2 px-4">{travel.destination}</td>
                <td className="py-2 px-4">
                  {new Date(travel.destination_datetime).toLocaleString()}
                </td>
                <td className="py-2 px-4">{travel.ticket_price} LKR</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default RAirtaxitravelList;
